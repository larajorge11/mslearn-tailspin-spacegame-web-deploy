trigger:
- '*'

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.300'

    steps:
    
    - task: GitVersion@5
      displayName: GitVersion
      inputs:
        preferBundledVersion: false
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'
    
    - task: PowerShell@2
      inputs:
        targetType: inline
        script: |
          Write-Host "Build.SourceBranchName > $(Build.SourceBranchName)"
          Write-Host "Build.SourceBranch > $(Build.SourceBranch)"
        
    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    # - task: DotNetCoreCLI@2
    #   displayName: 'Restore project dependencies'
    #   inputs:
    #     command: 'restore'
    #     includeNuGetOrg: false
    #     versioningScheme: byBuildNumber
    #     projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration) /p:Version=$(GitVersion.NuGetVersion)'
        versioningScheme: byBuildNumber
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      inputs:
        command: pack
        packagesToPack: '$(Parameters.projects)'
        nobuild: true
        versioningScheme: byEnvVar
        versionEnvVar: GitVersion.NuGetVersion
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'push'
        nuGetFeedType: 'internal'
        publishVstsFeed: '440849e0-a5b9-499b-81a0-0a3f9a099734/14b50f31-fedb-4fa1-abca-f2a18569f01c'
        versioningScheme: byBuildNumber

    # - task: Security static source code analysis@2019
    

    # - task: DotNetCoreCLI@2
    #   displayName: 'Publish the project - $(buildConfiguration)'
    #   inputs:
    #     command: 'publish'
    #     projects: '**/*.csproj'
    #     publishWebProjects: false
    #     arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    #     zipAfterPublish: true

    # - publish: '$(Build.ArtifactStagingDirectory)'
    #   artifact: drop

# - stage: 'Deploy'
#   displayName: 'Deploy the web application'
#   dependsOn: Build
#   jobs:
#   - deployment: Deploy
#     pool:
#       vmImage: 'ubuntu-18.04'
#     environment: dev
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: drop
#           - task: AzureWebApp@1
#             displayName: 'Azure App Service Deploy: website'
#             inputs:
#               azureSubscription: 'Azure subscription 1(dd95eff5-7a32-4614-94e9-fde0c716cf96)'
#               appType: 'webApp'
#               appName: 'tailspin-space-game-web-dev-6918'
#               package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
#               deploymentMethod: 'auto'